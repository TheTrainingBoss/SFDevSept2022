/* ------------------------------------------------------------------------------
<auto-generated>
    This file was generated by Sitefinity CLI v1.1.0.22
</auto-generated>
------------------------------------------------------------------------------ */

using SFDev2022.Mvc.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;
using System.Web.Mvc;
using Telerik.Sitefinity.GenericContent.Model;
using Telerik.Sitefinity.Modules.News;
using Telerik.Sitefinity.Mvc;
using Telerik.Sitefinity.News.Model;
using Telerik.Sitefinity.Personalization;
using Telerik.Sitefinity.Workflow;

namespace SFDev2022.Mvc.Controllers
{
	[ControllerToolboxItem(Name = "NewsCrud", Title = "News Crud", SectionName = "SFDev2022")]
	public class NewsCrudController : Controller, IPersonalizable
	{
		NewsManager newsManager = NewsManager.GetManager();

		// GET: NewsCrud
		public ActionResult Index()
		{
			var news = newsManager.GetNewsItems().Where(n => n.Status == ContentLifecycleStatus.Live);
			
			var model = new NewsCrudModel(news);
			
			return View(model);
		}

		public ActionResult CreatePressRelease()
		{
			NewsItem item = newsManager.CreateNewsItem();
			item.Title = "News Item 1";
			item.Content = "<h2>Test content here</h2>";
			item.DateCreated = DateTime.UtcNow;
			item.PublicationDate = DateTime.UtcNow;
			item.LastModified = DateTime.UtcNow;
			item.UrlName = Regex.Replace(item.Title, @"[^\w\-\!\$\'\(\)\=\@\d_]+", "-");

			newsManager.SaveChanges();

			var bag = new Dictionary<string, string>();
			bag.Add("ContentType", typeof(NewsItem).FullName);
			WorkflowManager.MessageWorkflow(item.Id, typeof(NewsItem), null, "Publish", false, bag);

			return View("CreatePressRelease");
		}

		public ActionResult Update()
		{
			var master = newsManager.GetNewsItems().FirstOrDefault(n => n.Title.Equals("News Item 1")
								   && n.Status == ContentLifecycleStatus.Master);

			var temp = newsManager.Lifecycle.CheckOut(master) as NewsItem;
			temp.Content = "This is the NEW test! Date: " + DateTime.Now.ToLongTimeString();

			master = newsManager.Lifecycle.CheckIn(temp) as NewsItem;

			newsManager.SaveChanges();

			var bag = new Dictionary<string, string>();
			bag.Add("ContentType", typeof(NewsItem).FullName);
			WorkflowManager.MessageWorkflow(master.Id, typeof(NewsItem), null, "Publish", false, bag);

			return View("Update");
		}

		protected override void HandleUnknownAction(string actionName)
        {
            this.ActionInvoker.InvokeAction(this.ControllerContext, "Index");
        }

		
	}
}